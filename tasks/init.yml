---

- name: Install required system packages
  become: true
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - build-essential
    - git
    - openssl
    - libssl-dev
    - curl

- name: Remove node package, in lieu of nvm
  become: true
  apt:
    name: "{{ item }}"
    state: absent
  with_items:
    - nodejs
    - node

- name: Test system groups
  shell: cat /etc/group
  register: groups_result

- name: Add system group if needed
  shell: groupadd "{{nvm_group}}"
  become: true
  when: groups_result.stdout.find(nvm_group) == -1

- name: Test user groups
  shell: groups
  register: user_groups_result

- name: Add group to user if needed
  shell: usermod -G "{{nvm_group}}" -a "{{ ansible_user }}"
  become: true
  when: user_groups_result.stdout.find(nvm_group) == -1

- name: Make global directories
  become: true
  file:
    path: "{{item}}"
    state: directory
    mode: 0775
    owner: root
    group: "{{nvm_group}}"
    recurse: true
  with_items:
    - "{{node_path}}"
    - "{{nvm_path}}"

- name: Make global directories inherit
  become: true
  file:
    path: "{{item}}"
    mode: "g+s"
    owner: root
    group: "{{nvm_group}}"
  with_items:
    - "{{node_path}}"
    - "{{nvm_path}}"

- name: Link the .nvm folder to global
  file:
    src:  "{{ nvm_path }}"
    dest: "/home/{{ ansible_user }}/.nvm"
    state: link

- name: Add required lines to /etc/environment
  become: true
  blockinfile:
    dest: "/etc/environment"
    block: |
      export NVM_DIR={{nvm_path}}
      export NODE_PATH={{node_path}}
      export NVM_SCRIPT={{nvm_install_dir}}/nvm.sh
    marker: "# {mark} ANSIBLE MANAGED BLOCK - NVM"
    insertbefore: EOL

- name: Clone nvm into place
  shell: git clone https://github.com/creationix/nvm.git {{nvm_install_dir}}
  args:
    creates: "{{nvm_install_dir}}/nvm.sh"
  become: true
#  when: nvm_stat.stat.exists != true

- name: Add /etc/profile.d/nvm.sh
  become: true
  template:
    src: ../templates/nvm.sh.j2
    dest: /etc/profile.d/nvm.sh
    mode: 0644
    owner: root
    group: root

- name: Remove remnant pm2 folders
  become: true
  file:
    state: absent
    dest: "{{item}}"
  with_items:
    - /usr/lib/node_modules

- name: Remove remnant global pm2 links
  become: true
  file:
    state: absent
    dest: "/usr/bin/{{item}}"
  with_items: "{{execs}}"

