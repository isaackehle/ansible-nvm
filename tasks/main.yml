---
- name: Test Paths
  include_tasks: test_paths.yml
  when: ((['processes', 'upgrade', 'restart'] | intersect(flags)) | length > 0)

- name: Initial Preparations, Set Variables
  include_tasks: common.yml

- name: Install
  include_tasks: install.yml
  when: ((['install', 'autostart'] | intersect(flags)) | length > 0)

- name: Kill any PM2 processes
  shell: |
    . {{ nvm_script }}
    pm2 kill
  become: true
  when:
    - PM2_PATH | length > 0
    - ((['install', 'autostart'] | intersect(flags)) | length > 0)

- name: Stop PM2 Process
  shell: |
    . {{ nvm_script }}
    pm2 stop all
  register: res
  failed_when: res.rc > 1
  become: true
  when:
    - PM2_PATH | length > 0
    - ((['processes'] | intersect(flags)) | length > 0)

- name: Purge old versions
  include_tasks: purge.yml
  when:
    - ((['install', 'purge', 'configure'] | intersect(flags)) | length > 0)

- name: Configure
  include_tasks: configure.yml
  when: ((['configure'] | intersect(flags)) | length > 0)

- name: Wipe NPM local packages
  file:
    dest: "{{ remote_deploy_dir }}/node_modules"
    state: absent
  when: ((['wipe'] | intersect(flags)) | length > 0)

- name: Set NPM packages string
  set_fact:
    npm_pkg_list: "{{ npm_pkgs | join(' ') }}"

- name: Set NPM modules string
  set_fact:
    npm_mod_list: "{{ pm2_mods | join(' ') }}"

- name: Install NPM global packages
  shell: npm install -g {{ npm_pkg_list }}
  become: true
  when: ((['configure'] | intersect(flags)) | length > 0)

- name: Link the executable files for all users
  file:
    src: "{{ nvm_dir }}/versions/{{ nvm.type }}/{{ nvm.ver }}/bin/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    state: link
    force: true
  with_items: "{{ apt_pkgs }}"
  become: true
  when: ((['configure', 'upgrade'] | intersect(flags)) | length > 0)

- name: Install PM2 modules
  shell: pm2 install {{ npm_mod_list }}
  args:
    chdir: "{{ remote_deploy_dir }}"
  become: true
  when:
    - ((['configure'] | intersect(flags)) | length > 0)
    - npm_mod_list | length > 0
    - PM2_PATH | length > 0

- name: Install local packages
  shell: |
    . {{ nvm_script }}
    npm install
  args:
    chdir: "{{ remote_deploy_dir }}"
  when: ((['configure'] | intersect(flags)) | length > 0)

- name: Upgrade NPM global packages
  become: true
  shell: |
    . {{ nvm_script }}
    npm upgrade -g {{ npm_pkg_list }}
  when: ((['upgrade'] | intersect(flags)) | length > 0)

- name: Force Install local packages
  shell: |
    . {{ nvm_script }}
    npm install --force
  args:
    chdir: "{{ remote_deploy_dir }}"
  when: ((['upgrade'] | intersect(flags)) | length > 0)

- name: Start PM2 Process
  shell: |
    . {{ nvm_script }}
    pm2 start ecosystem.yml
  args:
    chdir: "{{ remote_base_dir }}"
  when:
    - PM2_PATH | length > 0
    - ((['configure', 'processes', 'upgrade', 'autostart'] | intersect(flags)) | length > 0)

- name: Save PM2
  shell: pm2 save
  args:
    chdir: "/home/{{ generic_user.username }}"
  when: ((['processes', 'upgrade', 'autostart'] | intersect(flags)) | length > 0)

- name: Configure PM2 Process Auto Start
  shell: |
    . {{ nvm_script }}
    pm2 startup systemd -u '{{ generic_user.username }}' --hp '/home/{{ generic_user.username }}'
  args:
    chdir: "/home/{{ generic_user.username }}"
  become: true
  when: ((['processes', 'upgrade', 'autostart'] | intersect(flags)) | length > 0)

- name: Set permissions on /opt/pm2
  file:
    path: /opt/pm2
    owner: "{{ generic_user.username }}"
    group: "{{ generic_group }}"
    mode: 0770
    recurse: true
  become: true
  when: ((['processes', 'upgrade', 'autostart'] | intersect(flags)) | length > 0)

- name: Restart PM2 Process
  shell: |
    . {{ nvm_script }}
    pm2 restart all
  args:
    chdir: "{{ remote_base_dir }}"
  when:
    - PM2_PATH | length > 0
    - ((['restart'] | intersect(flags)) | length > 0)

- name: Enable Ports
  include_tasks: port_enable.yml
  when: ((['port_enable'] | intersect(flags)) | length > 0) and do_gui is defined and do_gui

- name: Clean artifact path
  file:
    state: absent
    path: "{{ remote_base_dir }}/core"
  tags: ["all"]
